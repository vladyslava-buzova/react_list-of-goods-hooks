{"version":3,"sources":["components/googsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","sortBy","setSortBy","isClickedAlp","setIsClickedAlp","isClickedLength","setIsClickedLength","isClickedReverse","setIsClickedReverse","copyGoods","reverse","sort","a","b","localeCompare","length","className","type","classNames","onClick","prevState","ReactDOM","render","document","getElementById"],"mappings":"kOAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SCNFC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8CN,oBAAS,GAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAgDR,oBAAS,GAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KAEMC,EAAS,UAAOb,GAuBlBG,GACFU,EAAUC,UAuBZ,OAZAD,EAAUE,MAAK,SAACC,EAAGC,GACjB,OAAQZ,GACN,IAAK,WACH,OAAOW,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QAAS,OAAO,MAKlB,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CAAE,WAAYf,IACtDgB,QAnDgB,WACtBjB,EAAU,YACVE,GAAgB,GAChBE,GAAmB,IA6Cf,iCAQA,wBACEW,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYb,IAChBc,QAtDc,WACpBjB,EAAU,UACVI,GAAmB,GACnBF,GAAgB,IA+CZ,4BASA,wBACEa,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYX,IAChBY,QAzDQ,WACdnB,GAAc,SAAAoB,GAAS,OAAKA,KAC5BZ,GAAqBD,IAmDjB,uBASGA,GAA+B,OAAXN,IAEnB,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAtDe,WACzBjB,EAAU,MACVF,GAAc,GACdI,GAAgB,GAChBE,GAAmB,GACnBE,GAAoB,IA8CZ,sBAWN,cAAC,EAAD,CAAWf,MAAOgB,QChHxBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0c8f410e.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/googsList';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('id');\n  const [isClickedAlp, setIsClickedAlp] = useState(true);\n  const [isClickedLength, setIsClickedLength] = useState(true);\n  const [isClickedReverse, setIsClickedReverse] = useState(true);\n\n  const copyGoods = [...goodsFromServer];\n\n  const sortingAlphabet = () => {\n    setSortBy('alphabet');\n    setIsClickedAlp(false);\n    setIsClickedLength(true);\n  };\n\n  const sortingLength = () => {\n    setSortBy('length');\n    setIsClickedLength(false);\n    setIsClickedAlp(true);\n  };\n\n  const reverse = () => {\n    setIsReversed(prevState => !prevState);\n    setIsClickedReverse(!isClickedReverse);\n\n    // if (isReversed) {\n    //   setIsClickedReverse(!isClickedReverse);\n    // }\n  };\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  const resetButtonHandler = () => {\n    setSortBy('id');\n    setIsReversed(false);\n    setIsClickedAlp(true);\n    setIsClickedLength(true);\n    setIsClickedReverse(true);\n  };\n\n  copyGoods.sort((a, b) => {\n    switch (sortBy) {\n      case 'alphabet':\n        return a.localeCompare(b);\n\n      case 'length':\n        return a.length - b.length;\n\n      default: return 0;\n    }\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', { 'is-light': isClickedAlp })}\n          onClick={sortingAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': isClickedLength })}\n          onClick={sortingLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': isClickedReverse })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(!isClickedReverse || sortBy !== 'id')\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetButtonHandler}\n            >\n              Reset\n            </button>\n          )}\n\n      </div>\n\n      <GoodsList goods={copyGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}